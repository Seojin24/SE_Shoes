#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('SE_Shoes:server');
var http = require('http');

//var config = require('../config/config.json')[process.env.NODE_ENV || "development"];
//var models = require("../models");

//app.set('port', config.port);
app.set('port', 3000);

//models.sequelize.sync().then(function() {
  var server = http.createServer(app).listen(app.get('port'));
  debug('Express server listening on port ' + app.get('port'));
  server.on('error', onError);
  server.on('listening', onListening);
//})

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
